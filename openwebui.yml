volumes:
  tailscale: {}

services:

##################### TAILSCALE #####################

  ts-openwebui:
    image: tailscale/tailscale:latest

    container_name: ts-openwebui
    hostname: openwebui
    environment:
      - TS_AUTHKEY=${OAUTH_CLIENT}?ephemeral=false
      - "TS_EXTRA_ARGS=--advertise-tags=tag:container --reset"
      - TS_SERVE_CONFIG=/config/openwebui.json
      - TS_STATE_DIR=/var/lib/tailscale
      - TS_USERSPACE=false

      # - TS_AUTH_ONCE=true


    volumes:
      # - ${PWD}/volumes/openwebui/tailscale/state:/var/lib/tailscale
      # - tailscale:/var/lib/tailscale
      # - ${PWD}/volumes/openwebui/tailscale/config:/config
      # - ${PWD}/configs/openwebui:/config
      - ${PWD}/volumes/state:/var/lib/tailscale
      - ${PWD}/config:/config
      - /dev/net/tun:/dev/net/tun

    cap_add:
      - net_admin
      - sys_module

    restart: unless-stopped



##################### OPEN WEBUI #####################
  open-webui:
    image: ghcr.io/open-webui/open-webui:main
    container_name: open-webui
    network_mode: service:ts-openwebui

    # ports:
    #   - "3000:8080"

    volumes:
      - ${PWD}/volumes/openwebui_backend_data:/app/backend/data

      # DOES NOT WORK YET... missing /app/backend/open_webui/static/assets/pdf-style.css
      # - ${OPENWEBUI_STATIC_DIR}:/app/backend/open_webui/static

    environment:
      # GLOBAL_LOG_LEVEL: "DEBUG"
      WEBUI_NAME: "PlebChat"
      ENABLE_MESSAGE_RATING: "false"
      ENABLE_COMMUNITY_SHARING: "true"
      # STATIC_DIR: "/Users/micah/Downloads/PLEBCHAT-PRODUCTION/volumes/openwebui_static"

      # ENABLE_SIGNUP: "false" # This will disable the creation of new user accounts - we don't want this
      # ENABLE_LOGIN_FORM: "false" # too many redirects? Unsure if this is related.
      DEFAULT_USER_ROLE: "admin"

      # DEFAULT_MODELS: ""

      # STATIC_DIR: "./static_openwebui"
      # /app/backend/static_openwebui

      OLLAMA_BASE_URL: "http://host.docker.internal:11434"

      # OPENAI_API_BASE_URLS: "https://api.openai.com/v1;http://host.docker.internal:9099"
      # OPENAI_API_BASE_URLS: "https://api.openai.com/v1;http://pipelines:9099"
      OPENAI_API_BASE_URLS: "https://api.openai.com/v1;http://localhost:9099"
      OPENAI_API_KEYS: "${OPENAI_API_KEY};${PIPELINES_API_KEY}"
      # OPENAI_API_KEYS: "${OPENAI_API_KEY};whatever" # the pipeline needs the key to UPDATE pipelines, not use them - FYI


      # Limit access to localhost to force traffic via Cloudflare
      # TODO uncommenting the below breaks things!
      # HOST: "127.0.0.1" # Uncomment to force traffic via Cloudflare and prevent local access
      # I don't think we even need this because a JWT is used for authentication and a local connection will be refused.


      HOST: 127.0.0.1
      WEBUI_AUTH_TRUSTED_EMAIL_HEADER: Tailscale-User-Login
      WEBUI_AUTH_TRUSTED_NAME_HEADER: Tailscale-User-Name

      AUDIO_TTS_ENGINE: "openai"
      AUDIO_TTS_ENGINE_API_KEY: "$"
      # AUDIO_TTS_OPENAI_API_BASE_URL: "http://host.docker.internal:8000/v1"
      AUDIO_TTS_OPENAI_API_BASE_URL: "http://localhost:5050/v1"
      AUDIO_TTS_MODEL: "tts-1"
      AUDIO_TTS_VOICE: "en-US-AnaNeural" # https://tts.travisvn.com
      AUDIO_TTS_SPLIT_ON: "punctuation"

      # WEBUI_SESSION_COOKIE_SECURE: "true"  # Forces cookies to be sent over secure HTTPS.
      # WEBUI_SESSION_COOKIE_SAME_SITE: "lax"  # Ensures that cookies are securely passed.
      # ENABLE_RAG_WEB_LOADER_SSL_VERIFICATION: "true"  # Make sure web certificates are validated.


      # TASK_MODEL: "phi3:3.8b" # not sure that this actually works
      TITLE_GENERATION_PROMPT_TEMPLATE: |
        User query:
        {{prompt:middletruncate:6000}}

        Task:
        Create a concise, 3-5 word title/summary for the user query above.

        Requirements:
        - The title should provide an at-a-glance idea of the generic topic / goal of the user's query
        - Provide a single answer, not a list of possible answers
        - Do not provide any other text
        - Provide ONLY the 3-5 word title suggestion
        - Your reply should be NO MORE than 5 words

        Examples:
        Stock Market Trends
        Perfect Chocolate Chip Recipe
        Evolution of Music Streaming
        Remote Work Productivity Tips
        Artificial Intelligence in Healthcare
        Video Game Development Insights




      #TODO:
      ### SEARXNG ENV SETTINGS ###
      # ENABLE_RAG_WEB_SEARCH: True
      # RAG_WEB_SEARCH_ENGINE: "searxng"
      # RAG_WEB_SEARCH_RESULT_COUNT: 3
      # RAG_WEB_SEARCH_CONCURRENT_REQUESTS: 10
      # SEARXNG_QUERY_URL: "http://localhost:8080/search?q=<query>"



    # extra_hosts:
      # - "host.docker.internal:host-gateway"  # Allow Open WebUI to reach the host machine.
      # - "localhost:host-gateway"

    restart: always





##################### PIPELINES #####################
  pipelines:
    image: ghcr.io/open-webui/pipelines:main
    container_name: pipelines
    network_mode: service:ts-openwebui

    # ports:
    #   - "9099:9099"
    environment:
      # add-host: host.docker.internal:host-gateway
      add-host: localhost:host-gateway
      PIPELINES_API_KEY: ${PIPELINES_API_KEY} # the pipelines will accept any API_KEY apparently... havn't gotten a reply yet

    volumes:
      - ${PWD}/volumes/pipelines:/app/pipelines  # Bind mount the local directory

    # networks:
    #   - openwebui_net

    depends_on:
      - open-webui

    restart: always


#docker run -d -p 5050:5050 travisvn/openai-edge-tts:latest

  openai-edge-tts:
    image: openai-edge-tts
    container_name: openai-edge-tts
    network_mode: service:ts-openwebui

    # ports:
    #   - "5050:5050"

    # environment:
    #   OPENAI_API_KEY: ${OPENAI_API_KEY}
    #   OPENAI_API_BASE_URL: "http://host.docker.internal:8000/v1"

    # networks:
    #   - openwebui_net



# ##################### WATCHTOWER #####################
#   watchtower:
#     image: containrrr/watchtower
#     container_name: watchtower

#     volumes:
#       - /var/run/docker.sock:/var/run/docker.sock  # Grant Watchtower access to Docker.

#     environment:
#       - TZ=America/Los_Angeles  # Set the timezone to Pacific Time (PT)

#     command:
#       - --cleanup
#       - --schedule
#       - "0 0 1 * * *"   # Run once a month at midnight UTC
#       - open-webui
#       # - searxng # docs say it's not recommended?

#     # networks:
#     #   - openwebui_net

#     restart: always





##################### NETWORKS #####################
# networks:
#   openwebui_net:
#     external: true
